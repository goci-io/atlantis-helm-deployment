dataStorage: 4Gi
defaultTFVersion: 0.12.29
orgWhitelist: ${vc_host}/${organization}/*
atlantisUrl: https://${atlantis_url}

image:
  repository: gocidocker/atlantis
  tag: 0.2.0

livenessProbe:
  periodSeconds: 30
%{ if tls_secret != "" ~}
  scheme: HTTPS
%{ endif ~}
readinessProbe:
  periodSeconds: 30
%{ if tls_secret != "" ~}
  scheme: HTTPS
%{ endif ~}

service:
  type: ClusterIP
%{ if tls_secret != "" ~}
  port: 443
%{ else ~}
  port: 80
%{ endif ~}

podTemplate:
  annotations:
%{ for key, annotation in pod_annotations ~}
    ${key}: "${annotation}"
%{ endfor ~}

%{ if tls_secret != "" ~}
tlsSecretName: ${tls_secret}
%{ endif ~}
%{ if length(terraform_env) > 0 ~}
%{ for key, val in terraform_env ~}
environmentSecrets:
  name: ${val}
  secretKeyRef:
    name: ${release}-custom
    key: ${key}
%{ endfor ~}
%{ endif ~}

environment:
  ATLANTIS_HIDE_PREV_PLAN_COMMENTS: "true"
  TF_PLUGIN_CACHE_DIR: /atlantis-data/.terraform.d/plugin-cache

repoConfig: |
  ---
  repos:
%{ for repo in repos ~}
  - id: "${vc_host}/${organization}/${repo}"
    apply_requirements: [${apply_requirements}]
    allowed_overrides: [workflow]
    allow_custom_workflows: false
    workflow: default
%{ endfor ~}

  workflows:
    default-aws:
      plan:
        steps:
%{ for key, val in merge(terraform_env, atlantis_env_expose) ~}
        - env:
            name: TF_VAR_${key}
            command: 'echo $${${val}}'
%{ endfor ~}
        - env:
            name: TF_CLI_ARGS_init
            command: 'echo "-backend-config=key=$${PROJECT_NAME}/terraform.tfstate -backend-config=bucket=$${TF_BUCKET} -backend-config=encrypt=true -backend-config=region=$${AWS_DEFAULT_REGION}"'
        - init
        - plan
    parameterized-aws:
      plan:
        steps:
%{ for key, val in merge(terraform_env, atlantis_env_expose) ~}
        - env:
            name: TF_VAR_${key}
            command: 'echo $${${val}}'
%{ endfor ~}
        - env:
            name: TF_CLI_ARGS_init
            command: 'echo "-backend-config=key=$${PROJECT_NAME}/terraform.tfstate -backend-config=bucket=$${TF_BUCKET} -backend-config=encrypt=true -backend-config=region=$${AWS_DEFAULT_REGION}"'
        - init
        - plan:
            extra_args: ["-var-file", "$${WORKSPACE}.tfvars"]
    default:
      plan:
        steps:
        - env:
            name: TF_VAR_stage
            command: 'echo $${WORKSPACE}'
%{ for key, val in merge(terraform_env, atlantis_env_expose) ~}
        - env:
            name: TF_VAR_${key}
            command: 'echo $${${val}}'
%{ endfor ~}
        - init
        - plan
    validate:
      plan:
        steps:
        - init
        - run: terraform validate -no-color

ingress:
  host: ${atlantis_url}
%{ if tls_secret != "" ~}
  tls:
  - hosts:
    - ${atlantis_url}
    secretName: ${tls_secret}
%{ endif ~}
%{ if length(ingress_annotations) > 0 ~}
  annotations:
%{ for key, val in ingress_annotations ~}
    ${key}: "${val}"
%{ endfor ~}
%{ endif ~}
