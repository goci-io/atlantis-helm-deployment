dataStorage: 8Gi
defaultTFVersion: 0.12.24
orgWhitelist: ${organization}
atlantisUrl: https://${atlantis_url}

image:
  repository: gocidocker/atlantis
  tag: 0.1.0

%{ if tls_secret != "" ~}
livenessProbe:
  scheme: HTTPS
readinessProbe:
  scheme: HTTPS
%{ endif ~}

service:
  type: ClusterIP
%{ if tls_secret != "" ~}
  port: 443
%{ else ~}
  port: 80
%{ endif ~}

podTemplate:
  annotations:
%{ for key, annotation in pod_annotations ~}
    ${key}: "${annotation}"
%{ endfor ~}

%{ if tls_secret != "" ~}
tlsSecretName: ${tls_secret}
%{ endif ~}

repoConfig: |
  ---
  repos:
%{ for repo in repos ~}
  - id: "${vc_host}/${organization}/${repo}"
    apply_requirements: [${apply_requirements}]
    allowed_overrides: [workflow]
    allow_custom_workflows: false
    workflow: default-aws
%{ endfor ~}

  workflows:
    default-aws:
      plan:
        steps:
        - run: "eval $(tfenv)"
        - env:
            name: TF_VAR_stage
            command: 'echo $${WORKSPACE}'
        - env:
            name: TF_CLI_ARGS_init
            command: 'echo "-backend-config=bucket=$${TF_BUCKET} -backend-config=encrypt=true -backend-config=region=$${AWS_DEFAULT_REGION} -no-color"'
        - run: rm -rf *.terraform *.tfstate*
        - run: terraform init -backend-config=key=$${PROJECT_NAME}/terraform.tfstate
        - plan

ingress:
  host: ${atlantis_url}
%{ if tls_secret != "" ~}
  tls:
  - hosts:
    - ${atlantis_url}
    secretName: ${tls_secret}
%{ endif ~}
%{ if ingress_class != "" ~}
  annotations:
    kubernetes.io/ingress.class: ${ingress_class}
%{ endif ~}
